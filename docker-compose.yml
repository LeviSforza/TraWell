version: "3.9"

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    domainname: rabbitmq.com
    environment:
        - RABBITMQ_DEFAULT_USER=admin
        - RABBITMQ_DEFAULT_PASS=password
        - AMQP_SERVER_URL=amqp://guest:guest@rabbitmq:5672
    ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
    volumes:
        - ./rabbitmq/log/:/var/log/rabbitmq/
        - ./rabbitmq/data/:/var/lib/rabbitmq/
    networks:
      - rabbitmq_network

  web_rides:
    build:
        context: "./TraWell-rides"
        dockerfile: Dockerfile
    command: bash -c "pip install -r requirements.txt && python consumer.py && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
    volumes:
        - ./TraWell-rides:/rides
    ports:
        - "8001:8001"
    depends_on:
        - db_rides
        - rabbitmq
    networks:
        - rabbitmq_network

  db_rides:
    image: postgres
    volumes:
      - ./TraWell-rides/postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    networks:
      - rabbitmq_network

  web_users:
    build:
        context: ./TraWell-users
        dockerfile: Dockerfile
    command: bash -c "pip install -r requirements.txt && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8003"
    volumes:
      - ./TraWell-users:/users
    ports:
      - "8003:8003"
    depends_on:
      - db_users
      - rabbitmq

  db_users:
    image: postgres
    volumes:
      - ./TraWell-users/postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5435:5432"

  # queue:
  #   build:
  #     context: ./TraWell-rides
  #     dockerfile: Dockerfile
  #   container_name: web_rides_queue
  #   command: "python consumer.py"
  #   depends_on:
  #     - web_rides
  #     - web_users
  #     - rabbitmq
  #   networks:
  #     - rabbitmq_network

networks:
  rabbitmq_network:
    driver: bridge

volumes:
  postgres_data:

#   celery:
#       image: calc-addition
#       build:
#           context: .
#           dockerfile: ./addition/Dockerfile
#       links:
#           - rabbit
#       deploy:
#           replicas: 2
#           restart_policy:
#               condition: on-failure
